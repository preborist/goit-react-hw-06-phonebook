{"version":3,"sources":["redux/phonebook/phonebook-actions.js","components/InputPhonebookForm/InputPhonebookForm.js","components/ContactsList/Contact/Contact.js","components/ContactsList/Filter/Filter.js","components/ContactsList/ContactsList.js","components/Container/Container.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["addNewContact","createAction","name","number","payload","id","shortid","deleteContact","changeFilter","InputPhonebookForm","handleInputChange","handleSubmit","inputName","inputNumber","className","onSubmit","onChange","type","value","Contact","onHandleDelete","onClick","Filter","inputFilterName","ContactsList","contacts","map","Container","children","App","state","e","preventDefault","props","phonebook","some","contact","toLowerCase","alert","setState","currentTarget","handleChangeFilter","this","filter","normalizedFilter","filteredContacts","includes","length","Component","connect","contactsReducer","createReducer","actions","filterReducer","_","combineReducers","phonebookPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"2WA+BaA,EAAgBC,YAC3B,2BACA,SAACC,EAAMC,GAAP,MAAmB,CACjBC,QAAS,CACPC,GAAIC,MACJJ,OACAC,cAIOI,EAAgBN,YAAa,2BAC7BO,EAAeP,YAAa,kC,eCG1BQ,EAzCY,SAAC,GAKrB,IAJLC,EAII,EAJJA,kBACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,UACAC,EACI,EADJA,YAEA,OACE,mCACE,uBAAMC,UAAU,qBAAqBC,SAAUJ,EAA/C,UACE,kCACE,sBAAMG,UAAU,QAAhB,kBACA,uBACEE,SAAUN,EACVR,KAAK,OACLe,KAAK,OACLC,MAAON,OAGX,kCACE,sBAAME,UAAU,QAAhB,oBACA,uBACEE,SAAUN,EACVR,KAAK,SACLe,KAAK,SACLC,MAAOL,OAIX,wBAAQI,KAAK,SAAb,+BCXOE,G,MAjBC,SAAC,GAAD,IAAGd,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAQiB,EAArB,EAAqBA,eAArB,OACd,sBAAKN,UAAU,UAAf,UACE,uBAAMA,UAAU,OAAhB,UAAwBZ,EAAxB,OACA,sBAAMY,UAAU,SAAhB,SAA0BX,IAC1B,wBAAQc,KAAK,SAASI,QAAS,kBAAMD,EAAef,IAApD,sBAH4BA,KCiBjBiB,EAnBA,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,gBAAiBf,EAAmB,EAAnBA,aACjC,OACE,yDACuB,IACrB,uBACEN,KAAK,SACLe,KAAK,OACLC,MAAOK,EACPP,SAAUR,QC2BHgB,G,MAhCM,SAAC,GAKf,IAJLC,EAII,EAJJA,SACAF,EAGI,EAHJA,gBACAf,EAEI,EAFJA,aACAY,EACI,EADJA,eAEA,OACE,qCACE,cAAC,EAAD,CAAQG,gBAAiBA,EAAiBf,aAAcA,IACxD,oBAAIM,UAAU,cAAd,SACGW,EAASC,KAAI,gBAAGrB,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,oBAAIW,UAAU,oBAAd,SACE,cAAC,EAAD,CACET,GAAIA,EACJH,KAAMA,EACNC,OAAQA,EACRiB,eAAgBA,KALmBf,aCPlCsB,G,MANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKd,UAAU,YAAf,SAA4Bc,MCQ1DC,E,4MACJC,MAAQ,CACN5B,KAAM,GACNC,OAAQ,I,EAGVQ,aAAe,SAAAoB,GACbA,EAAEC,iBADgB,MAEO,EAAKF,MAAtB5B,EAFU,EAEVA,KAAMC,EAFI,EAEJA,OACVD,GAAQC,GACV,EAAK8B,MAAMC,UAAUT,SAASU,MAC5B,SAAAC,GAAO,OAAIA,EAAQlC,KAAKmC,gBAAkBnC,EAAKmC,iBAE7CC,MAAM,GAAD,OAAIpC,EAAJ,4BACL,EAAK+B,MAAMjC,cAAcE,EAAMC,GACnC,EAAKoC,SAAS,CACZrC,KAAM,GACNC,OAAQ,MAGVmC,MAAM,iD,EAIV5B,kBAAoB,SAAAqB,GAAM,IAAD,EACCA,EAAES,cAAlBtC,EADe,EACfA,KAAMgB,EADS,EACTA,MACd,EAAKqB,SAAL,eAAiBrC,EAAOgB,K,EAG1BuB,mBAAqB,SAAAV,GAAM,IACjBvB,EAAiB,EAAKyB,MAAtBzB,aACsB,KAA1BuB,EAAES,cAActB,MAClBV,EAAauB,EAAES,cAActB,OAE7BV,EAAa,K,4CAIjB,WAAU,IAAD,EACkBkC,KAAKZ,MAAtB5B,EADD,EACCA,KAAMC,EADP,EACOA,OADP,EAEsBuC,KAAKT,MAAMC,UAAhCS,EAFD,EAECA,OAAQlB,EAFT,EAESA,SAEVmB,EAAmBD,EAAON,cAC1BQ,EAAmBpB,EAASkB,QAAO,SAAAP,GAAO,OAC9CA,EAAQlC,KAAKmC,cAAcS,SAASF,MAGtC,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CACEjC,aAAc+B,KAAK/B,aACnBD,kBAAmBgC,KAAKhC,kBACxBE,UAAWV,EACXW,YAAaV,IAEf,0CACCsB,EAASsB,OAAS,GACjB,cAAC,EAAD,CACEtB,SAAUoB,EACVzB,eAAgBsB,KAAKT,MAAM1B,cAC3BgB,gBAAiBoB,EACjBnC,aAAckC,KAAKD,4B,GA9DbO,aA4EHC,eANS,SAAAnB,GACtB,MAAO,CACLI,UAAWJ,EAAMI,aAImB,CACtClC,gBACAO,gBACAC,gBAHayC,CAIZpB,G,8CCxDGqB,EAAkBC,YACtB,CACE,CAAE9C,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,eALb,mBAQhCiD,GAAwB,SAACtB,EAAD,OAAU1B,EAAV,EAAUA,QAAV,4BAA4B0B,GAA5B,CAAmC1B,OAR3B,cAShCgD,GAAwB,SAACtB,EAAD,OAAU1B,EAAV,EAAUA,QAAV,OACvB0B,EAAMa,QAAO,qBAAGtC,KAAgBD,QAVD,IAc/BiD,EAAgBF,YAAc,GAAD,eAChCC,GAAuB,SAACE,EAAD,YAAMlD,YAGjBmD,cAAgB,CAC7B9B,SAAUyB,EACVP,OAAQU,IChCJG,EAAyB,CAC7BC,IAAK,YACLC,YACAC,UAAW,CAAC,WAGRC,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAKnDC,EAAQC,YAAe,CAClCC,QAAS,CACPtC,UAAWuC,YAAejB,EAAwBkB,IAEpDd,aACAe,UAAUC,IAGCC,EAAYC,YAAaR,G,MCrCtCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAaC,QAAS,KAAML,UAAWA,EAAvC,SACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINa,SAASC,eAAe,W","file":"static/js/main.70a8c95e.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n// import * as actionTypes from './phonebook-types';\r\n\r\n// -------------до toolkit--------------\r\n// export const addNewContact = (name, number) => {\r\n//   return {\r\n//     type: actionTypes.ADD_CONTACT,\r\n//     payload: {\r\n//       id: shortid(),\r\n//       name,\r\n//       number,\r\n//     },\r\n//   };\r\n// };\r\n\r\n// export const deleteContact = id => {\r\n//   return {\r\n//     type: actionTypes.DELETE_CONTACT,\r\n//     payload: id,\r\n//   };\r\n// };\r\n\r\n// export const changeFilter = payload => {\r\n//   return {\r\n//     type: actionTypes.FILTER_CONTACTS,\r\n//     payload,\r\n//   };\r\n// };\r\n// -------------после toolkit------------\r\n\r\nexport const addNewContact = createAction(\r\n  'phonebook/AddNewContact',\r\n  (name, number) => ({\r\n    payload: {\r\n      id: shortid(),\r\n      name,\r\n      number,\r\n    },\r\n  }),\r\n);\r\nexport const deleteContact = createAction('phonebook/DeleteContact');\r\nexport const changeFilter = createAction('phonebook/ChangeContactsFilter');\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './InputPhonebookForm.scss';\r\n\r\nconst InputPhonebookForm = ({\r\n  handleInputChange,\r\n  handleSubmit,\r\n  inputName,\r\n  inputNumber,\r\n}) => {\r\n  return (\r\n    <>\r\n      <form className=\"InputPhonebookForm\" onSubmit={handleSubmit}>\r\n        <label>\r\n          <span className=\"label\">Name</span>\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={inputName}\r\n          />\r\n        </label>\r\n        <label>\r\n          <span className=\"label\">Number</span>\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"number\"\r\n            type=\"number\"\r\n            value={inputNumber}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nInputPhonebookForm.propTypes = {\r\n  handleInputChange: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  inputName: PropTypes.string.isRequired,\r\n  inputNumber: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default InputPhonebookForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Contact.scss';\r\n\r\nconst Contact = ({ id, name, number, onHandleDelete }) => (\r\n  <div className=\"Contact\" key={id}>\r\n    <span className=\"name\">{name}:</span>\r\n    <span className=\"number\">{number}</span>\r\n    <button type=\"button\" onClick={() => onHandleDelete(id)}>\r\n      Delete\r\n    </button>\r\n  </div>\r\n);\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onHandleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ inputFilterName, changeFilter }) => {\r\n  return (\r\n    <label>\r\n      Find contacs by name{' '}\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={inputFilterName}\r\n        onChange={changeFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  inputFilterName: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Contact from './Contact';\r\nimport Filter from './Filter';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactList.scss';\r\n\r\nconst ContactsList = ({\r\n  contacts,\r\n  inputFilterName,\r\n  changeFilter,\r\n  onHandleDelete,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Filter inputFilterName={inputFilterName} changeFilter={changeFilter} />\r\n      <ul className=\"ContactList\">\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className=\"ContactList__item\" key={id}>\r\n            <Contact\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              onHandleDelete={onHandleDelete}\r\n            ></Contact>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  inputFilterName: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n  onHandleDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport './Container.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  addNewContact,\n  deleteContact,\n  changeFilter,\n} from './redux/phonebook/phonebook-actions';\n\nimport InputPhonebookForm from './components/InputPhonebookForm';\nimport ContactsList from './components/ContactsList';\nimport Container from './components/Container';\n\nclass App extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (name && number) {\n      this.props.phonebook.contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n        ? alert(`${name} is already in contacts`)\n        : this.props.addNewContact(name, number);\n      this.setState({\n        name: '',\n        number: '',\n      });\n    } else {\n      alert('Please enter a contact name or phone number!');\n    }\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleChangeFilter = e => {\n    const { changeFilter } = this.props;\n    if (e.currentTarget.value !== '') {\n      changeFilter(e.currentTarget.value);\n    } else {\n      changeFilter('');\n    }\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { filter, contacts } = this.props.phonebook;\n\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <InputPhonebookForm\n          handleSubmit={this.handleSubmit}\n          handleInputChange={this.handleInputChange}\n          inputName={name}\n          inputNumber={number}\n        />\n        <h2>Contacts</h2>\n        {contacts.length > 0 && (\n          <ContactsList\n            contacts={filteredContacts}\n            onHandleDelete={this.props.deleteContact}\n            inputFilterName={filter}\n            changeFilter={this.handleChangeFilter}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    phonebook: state.phonebook,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addNewContact,\n  deleteContact,\n  changeFilter,\n})(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import * as actionTypes from './phonebook-types';\r\nimport * as actions from './phonebook-actions';\r\n\r\n// -------------до toolkit--------------\r\n// const contactsReducer = (\r\n//   state = [\r\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//   ],\r\n//   { type, payload },\r\n// ) => {\r\n//   switch (type) {\r\n//     case actionTypes.ADD_CONTACT:\r\n//       return [...state, payload];\r\n//     case actionTypes.DELETE_CONTACT:\r\n//       return state.filter(contact => contact.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.FILTER_CONTACTS:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// -------------после toolkit------------\r\n\r\nconst contactsReducer = createReducer(\r\n  [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  {\r\n    [actions.addNewContact]: (state, { payload }) => [...state, payload],\r\n    [actions.deleteContact]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n  },\r\n);\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n","// import { combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\n// -------------до toolkit--------------\r\n// const rootReducer = combineReducers({\r\n//   phonebook: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n// -------------после toolkit------------\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'phonebook',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nimport { Provider } from 'react-redux';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersistGate loading={null} persistor={persistor}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </PersistGate>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}